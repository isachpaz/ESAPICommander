<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="UAB_Styles">
    <!-- SOLIDS. -->
    <SolidColorBrush x:Key="DetailBG" Color="#89404040" />
    <SolidColorBrush x:Key="DetailFG" Color="White" />

    <!-- GRADIENTS. -->
    <LinearGradientBrush x:Key="UAB_GREY_BACK" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFD4D4D4" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="UAB_GREY_GLOSS" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF9B9B9B" Offset="0.983" />
        <GradientStop Color="#FFCBCBCB" />
        <GradientStop Color="LightGray" Offset="0.498" />
        <GradientStop Color="#FFF0F0F0" Offset="0.485" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="UAB_LGREY_BACK" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFEAEAEA" Offset="1" />
        <GradientStop Color="White" Offset="0" />
    </LinearGradientBrush>

    <!-- BUTTON. -->
    <!-- Simple Button - This control sets brushes on each state. Note that these brushes must be listed above since they are static resources -->
    <Style x:Key="UAB_BUTTON" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource UAB_BUTTON_BACK}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <!-- We use Grid as a root because it is easy to add more elements to customize the button -->
                    <Grid x:Name="Grid">
                        <Border x:Name="Border" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" />

                        <!-- Content Presenter is where the text content etc is placed by the control -->
                        <!-- The bindings are useful so that the control can be parameterized without editing the template -->
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" />
                    </Grid>

                    <!--Each state sets a brush on the Border in the template -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}"
                                    TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource UAB_BUTTON_OVER}" TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource UAB_BUTTON_DOWN}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}"
                                    TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}"
                                    TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}"
                                    TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--BUTTON HELPERS (DON'T USE DIRECTLY-->
    <LinearGradientBrush x:Key="UAB_BUTTON_BACK" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFE7E278" Offset="0.532" />
        <GradientStop Color="White" Offset="0.498" />
        <GradientStop Color="White" Offset="0.386" />
        <GradientStop Color="#FF8D874A" Offset="1" />
        <GradientStop Color="#FFE7E278" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="UAB_BUTTON_OVER" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFD1CC6C" Offset="0.532" />
        <GradientStop Color="White" Offset="0.498" />
        <GradientStop Color="White" Offset="0.386" />
        <GradientStop Color="#FF57532C" Offset="1" />
        <GradientStop Color="#FFBDB967" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="UAB_BUTTON_DOWN" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox"
                         StartPoint="0.5,0">
        <GradientStop Color="#FF979681" Offset="0.532" />
        <GradientStop Color="White" Offset="0.498" />
        <GradientStop Color="White" Offset="0.386" />
        <GradientStop Color="#FF232215" Offset="1" />
        <GradientStop Color="#FF777575" />
    </LinearGradientBrush>

    <!-- TITLES. -->
    <LinearGradientBrush x:Key="UAB_TITLE" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF104229" Offset="0.557" />
        <GradientStop Color="#FF9DDBC7" Offset="0.098" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="UAB_TITLE_BORDER" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF437A63" Offset="1" />
        <GradientStop Color="#FF7DB7A2" Offset="0" />
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="UAB_GOLD_BACK">
        <GradientStop Color="#FFC1AC54" Offset="1" />
        <GradientStop Color="#FFEDE7AA" Offset="0.279" />
    </RadialGradientBrush>

    <Style x:Key="UAB_Control_Title" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="26.667" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="UAB_Header1" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Padding" Value="20,10,10,10" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
    <!-- NormalBrush is used as the Background for SimpleButton, SimpleRepeatButton -->
    <LinearGradientBrush x:Key="NormalBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#EEE" Offset="0.0" />
        <GradientStop Color="#CCC" Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#CCC" Offset="0.0" />
        <GradientStop Color="#444" Offset="1.0" />
    </LinearGradientBrush>

    <!-- LightBrush is used for content areas such as Menu, Tab Control background -->
    <LinearGradientBrush x:Key="LightBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF" Offset="0.0" />
        <GradientStop Color="#EEE" Offset="1.0" />
    </LinearGradientBrush>

    <!-- MouseOverBrush is used for MouseOver in Button, Radio Button, CheckBox -->
    <LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF" Offset="0.0" />
        <GradientStop Color="#AAA" Offset="1.0" />
    </LinearGradientBrush>

    <!-- PressedBrush is used for Pressed in Button, Radio Button, CheckBox -->
    <LinearGradientBrush x:Key="PressedBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#BBB" Offset="0.0" />
        <GradientStop Color="#EEE" Offset="0.1" />
        <GradientStop Color="#EEE" Offset="0.9" />
        <GradientStop Color="#FFF" Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#444" Offset="0.0" />
        <GradientStop Color="#888" Offset="1.0" />
    </LinearGradientBrush>

    <!-- SelectedBackgroundBrush is used for the Selected item in ListBoxItem, ComboBoxItem-->
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

    <!-- Disabled Brushes are used for the Disabled look of each control -->
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

    <!-- Used for background of ScrollViewer, TreeView, ListBox, Expander, TextBox, Tab Control -->
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

    <!-- DefaultedBorderBrush is used to show KeyBoardFocus -->
    <LinearGradientBrush x:Key="DefaultedBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#777" Offset="0.0" />
        <GradientStop Color="#000" Offset="1.0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />
    <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />

    <RadialGradientBrush x:Key="UAB_WINDOW_BACK" RadiusY="0.863" RadiusX="0.863">
        <GradientStop Color="Black" Offset="1" />
        <GradientStop Color="White" />
    </RadialGradientBrush>
    <SolidColorBrush x:Key="UAB_LGREY_SOLID" Color="#CFC7C7C7" />
    <Style x:Key="UAB_ItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid x:Name="grid">
                        <!-- Content Presenter is where the text content etc is placed by the control -->
                        <!-- The bindings are useful so that the control can be parameterized without editing the template -->
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Selector.IsSelected" Value="False">
                            <Setter Property="Background" TargetName="grid" Value="{DynamicResource UAB_LGREY_BACK}" />
                        </Trigger>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter Property="Background" TargetName="grid" Value="{DynamicResource UAB_BUTTON_BACK}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ListBackground" Color="#FFDADADA" />

</ResourceDictionary>